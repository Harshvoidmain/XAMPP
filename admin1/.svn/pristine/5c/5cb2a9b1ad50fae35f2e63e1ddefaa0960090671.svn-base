<?php
App::uses('AppController', 'Controller');
/**
 * ExtcPlacements Controller
 *
 * @property ExtcPlacement $ExtcPlacement
 */
class ExtcPlacementsController extends AppController {

/**
    * admin_index method
    *
    * @return void
    */
    public function admin_index() {
    $this->ExtcPlacement->recursive = 0;
    $this->set('extcPlacements', $this->paginate());
    }

    /**
    * admin_view method
    *
    * @throws NotFoundException
    * @param string $id
    * @return void
    */
    public function admin_view($id = null) {
    if (!$this->ExtcPlacement->exists($id)) {
    $this->Session->setFlash(__('Invalid extc placement'), 'flash_warning');
    $this->redirect($this->referer());
    }
    $options = array('conditions' => array('ExtcPlacement.' . $this->ExtcPlacement->primaryKey => $id));
    $this->set('extcPlacement', $this->ExtcPlacement->find('first', $options));
    }

        /**
    * admin_add method
    *
    * @return void
    */
    public function admin_add() {
    if ($this->request->is('post')) {
    $this->ExtcPlacement->create();
    if ($this->ExtcPlacement->save($this->request->data)) {
            $this->Session->setFlash(__('The extc placement has been saved'),'flash_success');
        $this->redirect(array('action' => 'index'));
        } else {
            $this->Session->setFlash(__('The extc placement could not be saved. Please, try again.'),'flash_error');
        }
    }
        }

        /**
    * admin_edit method
    *
    * @throws NotFoundException
    * @param string $id
    * @return void
    */
    public function admin_edit($id = null) {
    if (!$this->ExtcPlacement->exists($id)) {
    $this->Session->setFlash(__('Invalid extc placement'), 'flash_warning');
    $this->redirect($this->referer());
    }
    if ($this->request->is('post') || $this->request->is('put')) {
    if ($this->ExtcPlacement->save($this->request->data)) {
            $this->Session->setFlash(__('The extc placement has been saved'),'flash_success');
        $this->redirect(array('action' => 'index'));
        } else {
            $this->Session->setFlash(__('The extc placement could not be saved. Please, try again.'),'flash_error');
        }
    } else {
    $options = array('conditions' => array('ExtcPlacement.' . $this->ExtcPlacement->primaryKey => $id));
    $this->request->data = $this->ExtcPlacement->find('first', $options);
    }
        }

    /**
    * admin_delete method
    *
    * @throws NotFoundException
    * @throws MethodNotAllowedException
    * @param string $id
    * @return void
    */
    public function admin_delete($id = null) {
    $this->ExtcPlacement->id = $id;
    if (!$this->ExtcPlacement->exists()) {
    $this->Session->setFlash(__('Invalid extc placement'), 'flash_warning');
    $this->redirect($this->referer());
    }
    $this->request->onlyAllow('post', 'delete');
    if ($this->ExtcPlacement->delete()) {
            $this->Session->setFlash(__('Extc placement deleted'),'flash_success');
        $this->redirect(array('action' => 'index'));
        }
            $this->Session->setFlash(__('Extc placement was not deleted'),'flash_error');
        $this->redirect(array('action' => 'index'));
    }

   
    /**
    * index method
    *
    * @return void
    */
    public function index() {
    $this->ExtcPlacement->recursive = 0;
    $this->set('extcPlacements', $this->paginate());
    }

    /**
    * view method
    *
    * @throws NotFoundException
    * @param string $id
    * @return void
    */
    public function view($id = null) {
    if (!$this->ExtcPlacement->exists($id)) {
    $this->Session->setFlash(__('Invalid extc placement'), 'flash_warning');
    $this->redirect($this->referer());
    }
    $options = array('conditions' => array('ExtcPlacement.' . $this->ExtcPlacement->primaryKey => $id));
    $this->set('extcPlacement', $this->ExtcPlacement->find('first', $options));
    }

        /**
    * add method
    *
    * @return void
    */
    public function add() {
    if ($this->request->is('post')) {
    $this->ExtcPlacement->create();
    if ($this->ExtcPlacement->save($this->request->data)) {
            $this->Session->setFlash(__('The extc placement has been saved'),'flash_success');
        $this->redirect(array('action' => 'index'));
        } else {
            $this->Session->setFlash(__('The extc placement could not be saved. Please, try again.'),'flash_error');
        }
    }
        }

        /**
    * edit method
    *
    * @throws NotFoundException
    * @param string $id
    * @return void
    */
    public function edit($id = null) {
    if (!$this->ExtcPlacement->exists($id)) {
    $this->Session->setFlash(__('Invalid extc placement'), 'flash_warning');
    $this->redirect($this->referer());
    }
    if ($this->request->is('post') || $this->request->is('put')) {
    if ($this->ExtcPlacement->save($this->request->data)) {
            $this->Session->setFlash(__('The extc placement has been saved'),'flash_success');
        $this->redirect(array('action' => 'index'));
        } else {
            $this->Session->setFlash(__('The extc placement could not be saved. Please, try again.'),'flash_error');
        }
    } else {
    $options = array('conditions' => array('ExtcPlacement.' . $this->ExtcPlacement->primaryKey => $id));
    $this->request->data = $this->ExtcPlacement->find('first', $options);
    }
        }

    /**
    * delete method
    *
    * @throws NotFoundException
    * @throws MethodNotAllowedException
    * @param string $id
    * @return void
    */
    public function delete($id = null) {
    $this->ExtcPlacement->id = $id;
    if (!$this->ExtcPlacement->exists()) {
    $this->Session->setFlash(__('Invalid extc placement'), 'flash_warning');
    $this->redirect($this->referer());
    }
    $this->request->onlyAllow('post', 'delete');
    if ($this->ExtcPlacement->delete()) {
            $this->Session->setFlash(__('Extc placement deleted'),'flash_success');
        $this->redirect(array('action' => 'index'));
        }
            $this->Session->setFlash(__('Extc placement was not deleted'),'flash_error');
        $this->redirect(array('action' => 'index'));
    }
}
